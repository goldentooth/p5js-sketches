apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.spec.releaseName }}
  namespace: {{ .Values.spec.namespace }}
  labels:
    app: {{ .Values.spec.releaseName }}
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.spec.releaseName }}
  template:
    metadata:
      labels:
        app: {{ .Values.spec.releaseName }}
    spec:
      securityContext:
        runAsNonRoot: {{ .Values.spec.security.runAsNonRoot }}
        runAsUser: {{ .Values.spec.security.runAsUser }}
        runAsGroup: {{ .Values.spec.security.runAsGroup }}
      containers:
      - name: nginx
        image: {{ .Values.server.image }}
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            memory: {{ .Values.server.resources.limits.memory }}
            cpu: {{ .Values.server.resources.limits.cpu }}
          requests:
            memory: {{ .Values.server.resources.requests.memory }}
            cpu: {{ .Values.server.resources.requests.cpu }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.spec.security.allowPrivilegeEscalation }}
          readOnlyRootFilesystem: {{ .Values.spec.security.readOnlyRootFilesystem }}
          runAsNonRoot: {{ .Values.spec.security.runAsNonRoot }}
          runAsUser: {{ .Values.spec.security.runAsUser }}
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}