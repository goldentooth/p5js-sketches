apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.spec.releaseName }}
  namespace: {{ .Values.spec.namespace }}
  labels:
    app: {{ .Values.spec.releaseName }}
spec:
  replicas: {{ .Values.spec.server.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.spec.releaseName }}
  template:
    metadata:
      labels:
        app: {{ .Values.spec.releaseName }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: {{ .Values.spec.releaseName }}
              topologyKey: kubernetes.io/hostname
      serviceAccountName: {{ .Values.spec.releaseName }}-controller
      securityContext:
        runAsNonRoot: {{ .Values.spec.security.runAsNonRoot }}
        runAsUser: {{ .Values.spec.security.runAsUser }}
        runAsGroup: {{ .Values.spec.security.runAsGroup }}
      initContainers:
      # Sketch sync init container - syncs sketches at startup
      - name: sketch-sync
        image: alpine/k8s:1.30.5
        command:
        - /bin/sh
        - -c
        - |
{{ .Files.Get "sync-script.sh" | replace "NAMESPACE_PLACEHOLDER" .Values.spec.namespace | replace "GALLERY_TEMPLATE_PLACEHOLDER" (.Files.Get "gallery-template.html") | indent 10 }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.spec.security.allowPrivilegeEscalation }}
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - name: sketches-storage
          mountPath: /srv/sketches
        - name: tmp
          mountPath: /tmp
      containers:
      - name: nginx
        image: {{ .Values.spec.server.image }}
        ports:
        - containerPort: 8080
          name: http
        securityContext:
          allowPrivilegeEscalation: {{ .Values.spec.security.allowPrivilegeEscalation }}
          readOnlyRootFilesystem: {{ .Values.spec.security.readOnlyRootFilesystem }}
        volumeMounts:
        - name: sketches-storage
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        resources:
          requests:
            memory: {{ .Values.spec.server.resources.requests.memory }}
            cpu: {{ .Values.spec.server.resources.requests.cpu }}
          limits:
            memory: {{ .Values.spec.server.resources.limits.memory }}
            cpu: {{ .Values.spec.server.resources.limits.cpu }}
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: sketches-storage
        persistentVolumeClaim:
          claimName: sketches-storage
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: tmp
        emptyDir: {}