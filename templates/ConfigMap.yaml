apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: {{ .Values.spec.namespace }}
data:
  nginx.conf: |
    user nginx;
    worker_processes {{ .Values.spec.nginx.workerProcesses }};
    error_log /var/log/nginx/error.log warn;
    pid /tmp/nginx.pid;
    
    events {
        worker_connections {{ .Values.spec.nginx.workerConnections }};
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        
        # Performance optimizations for Pi hardware
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout {{ .Values.spec.nginx.keepaliveTimeout }};
        types_hash_max_size 2048;
        client_max_body_size {{ .Values.spec.nginx.clientMaxBodySize }};
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;
        
        server {
            listen 8080;
            server_name _;
            root /srv/sketches;
            index index.html;
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Serve sketches from subdirectories
            location / {
                try_files $uri $uri/ =404;
                
                # Cache static assets
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                }
                
                # Special handling for p5.js sketches
                location ~ ^/([^/]+)/?$ {
                    try_files $uri $uri/ /$1/index.html =404;
                }
            }
            
            # Serve custom gallery index.html at root
            location = / {
                try_files /index.html =404;
            }
        }
    }