name: Build and Push Container Image

on:
  push:
    branches:
      - main
    paths:
      - 'sketches/**'
      - 'templates/**'
      - 'values.yaml'
      - 'Chart.yaml'
      - 'capture-previews.js'
      - 'gallery-template.html'
      - 'package*.json'
      - 'Dockerfile'
      - '.github/workflows/build-image.yml'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild image'
        required: false
        default: 'false'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache Puppeteer browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/puppeteer
          key: ${{ runner.os }}-puppeteer-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-puppeteer-

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Generate previews and gallery
        env:
          FORCE_REGENERATE: true
        run: npm run build

      - name: Commit generated files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add files that exist (use find to handle missing files gracefully)
          find sketches -name "preview.png" -o -name "preview.gif" | xargs -r git add
          git add sketches/index.html 2>/dev/null || echo "index.html not found"
          
          if ! git diff --cached --quiet; then
            git commit -m "üñºÔ∏è Auto-generate gallery and preview files
            
            Generated by build workflow
            - Updated preview images and metadata
            - Regenerated gallery index.html
            
            Co-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
            git push
          else
            echo "No changes to commit"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=main-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update values.yaml with SHA tag
        run: |
          # Extract the SHA tag (should be in format main-<sha>)
          SHA_TAG=$(echo '${{ steps.meta.outputs.tags }}' | grep 'main-' | head -1 | cut -d':' -f2)
          echo "Updating values.yaml with image tag: $SHA_TAG"
          
          # Update the image reference in values.yaml
          sed -i "s|image: .*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$SHA_TAG|" values.yaml
          
          # Commit the values.yaml change
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add values.yaml
          
          if ! git diff --cached --quiet; then
            git commit -m "üöÄ Update image tag to $SHA_TAG
            
            Updated values.yaml to reference specific SHA-tagged image
            This eliminates the need for imagePullPolicy: Always
            
            Co-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
            git push
          else
            echo "No changes to values.yaml"
          fi

      - name: Generate deployment summary
        run: |
          SHA_TAG=$(echo '${{ steps.meta.outputs.tags }}' | grep 'main-' | head -1 | cut -d':' -f2)
          echo "## üöÄ Container Image Built Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$SHA_TAG\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- `/' | sed 's/$/`/' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Argo CD will sync the updated values.yaml automatically!" >> $GITHUB_STEP_SUMMARY